import{_ as s,c as e,o as i,a4 as a}from"./chunks/framework.C4Fe0b5Z.js";const g=JSON.parse('{"title":"Flex 布局详细总结","description":"","frontmatter":{"title":"Flex 布局详细总结","password":null,"date":"2024/10/02 02:06:04"},"headers":[],"relativePath":"interview/css/flex.md","filePath":"blog/interview/css/flex.md","lastUpdated":1727806742000}'),l={name:"interview/css/flex.md"},n=a(`<h1 id="flex-布局详细总结" tabindex="-1">Flex 布局详细总结 <a class="header-anchor" href="#flex-布局详细总结" aria-label="Permalink to &quot;Flex 布局详细总结&quot;">​</a></h1><p>Flex 布局（Flexible Box Layout）是一种用于在容器中分配空间和对齐内容的 CSS 布局模型。它使得在复杂的布局中，元素能够灵活地适应可用空间。</p><h3 id="主要概念" tabindex="-1">主要概念 <a class="header-anchor" href="#主要概念" aria-label="Permalink to &quot;主要概念&quot;">​</a></h3><ol><li><p><strong>容器与项目</strong>：</p><ul><li><strong>容器</strong>：通过 <code>display: flex;</code> 或 <code>display: inline-flex;</code> 声明的元素。</li><li><strong>项目</strong>：容器内部的直接子元素。</li></ul></li><li><p><strong>主轴与交叉轴</strong>：</p><ul><li><strong>主轴</strong>：默认方向为水平方向（<code>flex-direction: row;</code>）。</li><li><strong>交叉轴</strong>：垂直于主轴的方向。</li></ul></li></ol><h3 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h3><ul><li><code>display</code>: 设置为 <code>flex</code> 或 <code>inline-flex</code>。</li><li><code>flex-direction</code>: 定义主轴方向（<code>row</code>, <code>row-reverse</code>, <code>column</code>, <code>column-reverse</code>）。</li><li><code>flex-wrap</code>: 定义是否换行（<code>nowrap</code>, <code>wrap</code>, <code>wrap-reverse</code>）。</li><li><code>flex-flow</code>: <code>flex-direction</code> 和 <code>flex-wrap</code> 的简写形式。</li><li><code>justify-content</code>: 定义主轴上的对齐方式（<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>space-between</code>, <code>space-around</code>, <code>space-evenly</code>）。</li><li><code>align-items</code>: 定义交叉轴上的对齐方式（<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>baseline</code>, <code>stretch</code>）。</li><li><code>align-content</code>: 定义多行的对齐方式（<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>space-between</code>, <code>space-around</code>, <code>stretch</code>）。</li><li><code>gap</code>: 定义项目之间的间距。</li></ul><h3 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h3><ul><li><code>flex-grow</code>: 定义项目的放大比例，默认为 0。</li><li><code>flex-shrink</code>: 定义项目的缩小比例，默认为 1。</li><li><code>flex-basis</code>: 定义项目在主轴上的初始大小，默认值为 <code>auto</code>。</li><li><code>flex</code>: <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写形式。</li><li><code>align-self</code>: 定义单个项目在交叉轴上的对齐方式，覆盖 <code>align-items</code> 的设置（<code>auto</code>, <code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>baseline</code>, <code>stretch</code>）。</li></ul><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* flex-grow | flex-shrink | flex-basis */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noreferrer">MDN</a></p>`,11),t=[n];function d(o,c,p,r,h,k){return i(),e("div",null,t)}const f=s(l,[["render",d]]);export{g as __pageData,f as default};
